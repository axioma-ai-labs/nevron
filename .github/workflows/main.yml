name: CI 

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: ${{ !contains(github.ref, 'main')}}

jobs:
  Lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]
    with:
      python-version: ${{ matrix.python-version }}
    steps:
      - name: Checkout repository
          uses: actions/checkout@v4
          with:
          lfs: 'true'

        - name: Set up Python 3.13
          uses: actions/setup-python@v5
          with:
            python-version: "3.13"

        - name: Install and configure Poetry
          uses: snok/install-poetry@v1
          with:
            version: 2.0.1
            virtualenvs-create: true
            virtualenvs-in-project: true

        - name: Set up cache
          uses: actions/cache@v3
          id: cached-poetry-dependencies
          with:
            path: .venv
            key: venv-${{ runner.os }}-python-3.13-${{ hashFiles('**/poetry.lock') }}

        - name: Install dependencies
          run: poetry install
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Lint source code
        run: make lint

  Unit-Test:
    runs-on: ubuntu-latest
    needs:
      - Lint
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]
    with:
      python-version: ${{ matrix.python-version }}
    steps:
      - name: Checkout repository
          uses: actions/checkout@v4
          with:
          lfs: 'true'

        - name: Set up Python 3.13
          uses: actions/setup-python@v5
          with:
            python-version: "3.13"

        - name: Install and configure Poetry
          uses: snok/install-poetry@v1
          with:
            version: 2.0.1
            virtualenvs-create: true
            virtualenvs-in-project: true

        - name: Set up cache
          uses: actions/cache@v3
          id: cached-poetry-dependencies
          with:
            path: .venv
            key: venv-${{ runner.os }}-python-3.13-${{ hashFiles('**/poetry.lock') }}

        - name: Install dependencies
          run: poetry install
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run tests
        run: make test-ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.1.2
        with:
          flags: main
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: axioma-ai-labs/nevron
